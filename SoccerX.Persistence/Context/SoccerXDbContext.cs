// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using SoccerX.Domain.Entities;
using SoccerX.Persistence.Context.Configurations;
using System;
using System.Collections.Generic;
#nullable disable

namespace SoccerX.Persistence.Context;

public partial class SoccerXDbContext : DbContext
{
    public SoccerXDbContext(DbContextOptions<SoccerXDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Auditlog> Auditlogs { get; set; }

    public virtual DbSet<Betslip> Betslips { get; set; }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<Comment> Comments { get; set; }

    public virtual DbSet<Country> Countries { get; set; }

    public virtual DbSet<Emailverification> Emailverifications { get; set; }

    public virtual DbSet<Like> Likes { get; set; }

    public virtual DbSet<Notification> Notifications { get; set; }

    public virtual DbSet<Payment> Payments { get; set; }

    public virtual DbSet<Referralreward> Referralrewards { get; set; }

    public virtual DbSet<Subscription> Subscriptions { get; set; }

    public virtual DbSet<Team> Teams { get; set; }

    public virtual DbSet<Transaction> Transactions { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .HasPostgresEnum("auditaction", new[] { "Create", "Update", "Delete", "Restore" })
            .HasPostgresEnum("betslipstatus", new[] { "Pending", "Won", "Lost" })
            .HasPostgresEnum("paymentmethod", new[] { "CreditCard", "PayPal", "Crypto" })
            .HasPostgresEnum("paymentstatus", new[] { "Pending", "Completed", "Failed", "Refunded" })
            .HasPostgresEnum("referralstatus", new[] { "Pending", "Paid" })
            .HasPostgresEnum("transactiontype", new[] { "Deposit", "Withdrawal", "Subscription", "BetSlipPurchase" })
            .HasPostgresEnum("userrole", new[] { "User", "Editor", "Admin" })
            .HasPostgresEnum("userstatus", new[] { "Active", "Banned" });

        modelBuilder.ApplyConfiguration(new Configurations.AuditlogConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.BetslipConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CityConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CommentConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CountryConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.EmailverificationConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.LikeConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.NotificationConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PaymentConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ReferralrewardConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SubscriptionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TeamConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TransactionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UserConfiguration());
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
