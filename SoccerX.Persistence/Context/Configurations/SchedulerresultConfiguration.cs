// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using SoccerX.Domain.Entities;
using SoccerX.Persistence.Context;
using System;
using System.Collections.Generic;

namespace SoccerX.Persistence.Context.Configurations
{
    public partial class SchedulerresultConfiguration : IEntityTypeConfiguration<Schedulerresult>
    {
        public void Configure(EntityTypeBuilder<Schedulerresult> entity)
        {
            entity.HasKey(e => e.Id).HasName("schedulerresult_pkey");

            entity.ToTable("schedulerresult");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("gen_random_uuid()")
                .HasColumnName("id");
            entity.Property(e => e.Enddate)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("enddate");
            entity.Property(e => e.Jobdescription)
                .IsRequired()
                .HasColumnName("jobdescription");
            entity.Property(e => e.Jobgroup)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("jobgroup");
            entity.Property(e => e.Jobkey)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("jobkey");
            entity.Property(e => e.Resultdetail).HasColumnName("resultdetail");
            entity.Property(e => e.Startdate)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("startdate");
            entity.Property(e => e.Userid).HasColumnName("userid");
            entity.Property(e => e.Workingtime).HasColumnName("workingtime");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Schedulerresult> entity);
    }
}
